/*
 * proto/allocation/allocation.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: version not set
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type AllocationAllocationRequest struct {
	Namespace string `json:"namespace,omitempty"`
	// If specified, multi-cluster policies are applied. Otherwise, allocation will happen locally.
	MultiClusterSetting *AllocationMultiClusterSetting `json:"multiClusterSetting,omitempty"`
	// Deprecated: Please use gameServerSelectors instead. This field is ignored if the gameServerSelectors field is set The required allocation. Defaults to all GameServers.
	RequiredGameServerSelector *AllocationGameServerSelector `json:"requiredGameServerSelector,omitempty"`
	// Deprecated: Please use gameServerSelectors instead. This field is ignored if the gameServerSelectors field is set The ordered list of preferred allocations out of the `required` set. If the first selector is not matched, the selection attempts the second selector, and so on.
	PreferredGameServerSelectors []AllocationGameServerSelector `json:"preferredGameServerSelectors,omitempty"`
	// Scheduling strategy. Defaults to \"Packed\".
	Scheduling *AllocationRequestSchedulingStrategy `json:"scheduling,omitempty"`
	MetaPatch *AllocationMetaPatch `json:"metaPatch,omitempty"`
	Metadata *AllocationMetaPatch `json:"metadata,omitempty"`
	// Ordered list of GameServer label selectors. If the first selector is not matched, the selection attempts the second selector, and so on. This is useful for things like smoke testing of new game servers. Note: This field can only be set if neither Required or Preferred is set.
	GameServerSelectors []AllocationGameServerSelector `json:"gameServerSelectors,omitempty"`
}
